<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="cpp" targetName="cpp" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2167fb79-71d2-401f-99fe-5332ca140d68" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/cpp.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/query/cache-v2" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/query/cmakeFiles-v1" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/query/codemodel-v2" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/query/toolchains-v1" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/cache-v2-828413db19c8d7f90abf.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-8c0161f5aabd4d02438a.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-ad75578bb7ac043651fe.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/index-2024-01-03T03-58-33-0969.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/target-cpp-Debug-db8b8b0e051fa1081f42.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-e15cf892bff6c235560b.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/.ninja_deps" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/.ninja_log" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.25.2/CMakeCCompiler.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.25.2/CMakeCXXCompiler.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.25.2/CMakeDetermineCompilerABI_C.bin" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.25.2/CMakeDetermineCompilerABI_CXX.bin" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.25.2/CMakeRCCompiler.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.25.2/CMakeSystem.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/a.exe" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/a.exe" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeOutput.log" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-Debug-log.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-environment.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/cmake.check_cache" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/cpp.dir/main.cpp.obj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/rules.ninja" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/build.ninja" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/cmake_install.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/cpp.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/CollectedAst.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/CollectedAst.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/CollectedStatementNode.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/CollectedStatementNode.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Collector.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Collector.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/CollectorPass2.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/CollectorPass2.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/ResolvedAst.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/ResolvedAst.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/ResolvedExpressionNode.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/ResolvedExpressionNode.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/ResolvedStatementNode.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/ResolvedStatementNode.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Resolver.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Resolver.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/SymbolTable.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/SymbolTable.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/AliasedSymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/AliasedSymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/CastOverloadSymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/CastOverloadSymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/ConstSymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/ConstSymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/ConstructorSymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/ConstructorSymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/DefSymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/DefSymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/DestructorSymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/DestructorSymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/FieldSymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/FieldSymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/FunctionSymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/FunctionSymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/ISymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/ISymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/ModuleSymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/ModuleSymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/OperatorOverloadSymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/OperatorOverloadSymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/ParameterSymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/ParameterSymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/TypeSymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/TypeSymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/VarSymbol.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Symbols/VarSymbol.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Semantics/Type.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Semantics/Type.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Syntax/Ast.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Syntax/Ast.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Syntax/ExpressionNode.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Syntax/ExpressionNode.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Syntax/Parser.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Syntax/Parser.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Syntax/SyntaxType.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Syntax/SyntaxType.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Text/FilteredLexer.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Text/FilteredLexer.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Text/ILexer.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Text/ILexer.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Text/Lexer.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Text/Lexer.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Analysis/Text/StringBuffer.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../Analysis/Text/StringBuffer.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Beanstalk.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/../Beanstalk.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../CodeGen/CodeGenerator.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../CodeGen/CodeGenerator.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../Compiler/Program.cs" beforeDir="false" afterPath="$PROJECT_DIR$/../../Compiler/Program.cs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="s1nbrqpd" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2023" />
    <option name="minorVersion" value="1.3" />
  </component>
  <component name="ProjectId" id="2aQYoInFyicgwiZz0K2Cwh4uwCj" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;development&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;structure.view.defaults.are.configured&quot;: &quot;true&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="cpp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="cpp" TARGET_NAME="cpp" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="cpp" RUN_TARGET_NAME="cpp">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2167fb79-71d2-401f-99fe-5332ca140d68" name="Changes" comment="" />
      <created>1704252442175</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1704252442175</updated>
      <workItem from="1704252443469" duration="896000" />
      <workItem from="1704253787814" duration="350000" />
      <workItem from="1704254159883" duration="481000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticEditVcpkgJson value="false" />
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticFoundErrors value="true" />
  </component>
</project>